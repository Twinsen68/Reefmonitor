substitutions:
  opticalLowPin: "33"  # Broche du capteur optique inférieur (niveau bas)
  opticalHighPin: "32"  # Broche du capteur optique supérieur (niveau haut)
  update_water: "60s"  # Intervalle de mise à jour du capteur de niveau d'eau
  sorting_group_water_level_weight: '11'  # Poids de tri pour le groupe niveau d'eau dans l'interface web

web_server:
  sorting_groups:
    - id: sorting_group_water_level  # Groupe des capteurs de niveau d'eau
      name: "Niveau d'eau"  # Nom affiché du groupe
      sorting_weight: ${sorting_group_water_level_weight}

esphome:
  on_boot:  # Action à exécuter au démarrage de l'appareil
    priority: 200
    then:
      - component.update: water_level

binary_sensor:
  - platform: gpio  # Capteur optique pour détecter le niveau bas de l'eau
    id: os_low
    icon: mdi:arrow-down-bold
    pin: 
      number: ${opticalLowPin}
      inverted: true
      mode:
        input: true
        pullup: true
    name: "Capteur : Bas"
    filters:
      - delayed_on_off: 30ms
    on_state:
      then:
        - component.update: water_level
    web_server:
      sorting_group_id: sorting_group_water_level

  - platform: gpio  # Capteur optique pour détecter le niveau haut de l'eau
    id: os_high
    icon: mdi:arrow-up-bold
    pin: 
      number: ${opticalHighPin}
      inverted: true
      mode:
        input: true
        pullup: true
    name: "Capteur : Haut"
    filters:
      - delayed_on_off: 30ms
    on_state:
      then:
        - component.update: water_level
    web_server:
      sorting_group_id: sorting_group_water_level

text_sensor:
  - platform: template  # Indique le niveau actuel de l'eau (High, Normal, Low)
    icon: mdi:waves-arrow-up
    name: "Water Level"
    id: water_level
    update_interval: "${update_water}"
    lambda: |-
      if(id(os_high).state && id(os_low).state) {
        return {"High"};
      } else if(!id(os_high).state && !id(os_low).state) {
        return {"Low"};
      } else if(!id(os_high).state && id(os_low).state) {
        return {"Normal"};
      } else {
        return {"Unknown or Error"};
      }
    web_server:
      sorting_group_id: sorting_group_water_level
      sorting_weight: 10
